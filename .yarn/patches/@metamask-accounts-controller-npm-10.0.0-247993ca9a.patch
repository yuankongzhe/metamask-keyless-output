diff --git a/dist/utils.js b/dist/utils.js
index 810f229841ffff83f7a28191bc558862b1809e01..aa2ea845d4cccfac8e28f575d7972bd2dba8decf 100644
--- a/dist/utils.js
+++ b/dist/utils.js
@@ -11,35 +11,40 @@ const uuid_1 = require("uuid");
  * @returns The name of the keyring type.
  */
 function keyringTypeToName(keyringType) {
-    switch (keyringType) {
-        case keyring_controller_1.KeyringTypes.simple: {
-            return 'Account';
-        }
-        case keyring_controller_1.KeyringTypes.hd: {
-            return 'Account';
-        }
-        case keyring_controller_1.KeyringTypes.trezor: {
-            return 'Trezor';
-        }
-        case keyring_controller_1.KeyringTypes.ledger: {
-            return 'Ledger';
-        }
-        case keyring_controller_1.KeyringTypes.lattice: {
-            return 'Lattice';
-        }
-        case keyring_controller_1.KeyringTypes.qr: {
-            return 'QR';
-        }
-        case keyring_controller_1.KeyringTypes.snap: {
-            return 'Snap Account';
-        }
-        case keyring_controller_1.KeyringTypes.custody: {
-            return 'Custody';
-        }
-        default: {
-            throw new Error(`Unknown keyring ${keyringType}`);
-        }
+  // Custody Keyrings follow this pattern
+  if (/^Custody.*/.test(keyringType)) {
+    return "Custody";
+  }
+
+  switch (keyringType) {
+    case keyring_controller_1.KeyringTypes.simple: {
+      return "Account";
     }
+    case keyring_controller_1.KeyringTypes.hd: {
+      return "Account";
+    }
+    case keyring_controller_1.KeyringTypes.trezor: {
+      return "Trezor";
+    }
+    case keyring_controller_1.KeyringTypes.ledger: {
+      return "Ledger";
+    }
+    case keyring_controller_1.KeyringTypes.lattice: {
+      return "Lattice";
+    }
+    case keyring_controller_1.KeyringTypes.qr: {
+      return "QR";
+    }
+    case keyring_controller_1.KeyringTypes.snap: {
+      return "Snap Account";
+    }
+    case keyring_controller_1.KeyringTypes.custody: {
+      return "Custody";
+    }
+    default: {
+      throw new Error(`Unknown keyring ${keyringType}`);
+    }
+  }
 }
 exports.keyringTypeToName = keyringTypeToName;
 /**
@@ -48,10 +53,10 @@ exports.keyringTypeToName = keyringTypeToName;
  * @returns The generated UUID.
  */
 function getUUIDFromAddressOfNormalAccount(address) {
-    const v4options = {
-        random: (0, ethereumjs_util_1.sha256FromString)(address).slice(0, 16),
-    };
-    return (0, uuid_1.v4)(v4options);
+  const v4options = {
+    random: (0, ethereumjs_util_1.sha256FromString)(address).slice(0, 16),
+  };
+  return (0, uuid_1.v4)(v4options);
 }
 exports.getUUIDFromAddressOfNormalAccount = getUUIDFromAddressOfNormalAccount;
 //# sourceMappingURL=utils.js.map
