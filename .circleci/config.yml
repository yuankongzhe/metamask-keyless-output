version: 2.1

executors:
  node-browsers-small:
    docker:
      - image: cimg/node:20.11-browsers
    resource_class: small
    environment:
      FONTCONFIG_PATH: /etc/fonts
      NODE_OPTIONS: --max_old_space_size=2048
  node-browsers-medium:
    docker:
      - image: cimg/node:20.11-browsers
    resource_class: medium
    environment:
      FONTCONFIG_PATH: /etc/fonts
      NODE_OPTIONS: --max_old_space_size=3072
  node-browsers-medium-plus:
    docker:
      - image: cimg/node:20.11-browsers
    resource_class: medium+
    environment:
      FONTCONFIG_PATH: /etc/fonts
      NODE_OPTIONS: --max_old_space_size=4096
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine@sha256:dfaf08fab58c158549d3be64fb101c626abc5f16f341b569092577ae207db199
    resource_class: small
  playwright:
    docker:
      - image: mcr.microsoft.com/playwright:v1.42.1-focal
    resource_class: medium

orbs:
  gh: circleci/github-cli@2.0
  codecov: codecov/codecov@3.2.2
  slack: circleci/slack@4.12.5

rc_branch_only: &rc_branch_only
  filters:
    branches:
      only:
        - /^Version-v(\d+)[.](\d+)[.](\d+)/

aliases:
  # Shallow Git Clone
  - &shallow-git-clone
    name: Shallow Git Clone
    command: |
      #!/bin/bash
      set -e
      set -u
      set -o pipefail

      # Set up SSH access
      # This SSH key is the current github.com SSH key as of June 2023, but it will need to be changed whenever github changes their key (probably every few years)
      GITHUB_SSH_KEY="AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl"
      mkdir -p ~/.ssh
      echo github.com ssh-ed25519 $GITHUB_SSH_KEY >> ~/.ssh/known_hosts

      git clone --depth 1 --no-checkout "$CIRCLE_REPOSITORY_URL" .
      git fetch --depth 1 origin "$CIRCLE_SHA1"

      if [ -n "${CIRCLE_TAG-}" ]; then
        echo "Checkout tag '${CIRCLE_TAG}' at commit '${CIRCLE_SHA1}'"
        git checkout "$CIRCLE_TAG"
        git reset --hard "$CIRCLE_SHA1"
      else
        echo "Checkout branch '${CIRCLE_BRANCH}' at commit '${CIRCLE_SHA1}'"
        git checkout -B "$CIRCLE_BRANCH" "$CIRCLE_SHA1"
      fi

workflows:
  test_and_release:
    jobs:
      - create_release_pull_request:
          <<: *rc_branch_only
          requires:
            - prep-deps
      - trigger-beta-build:
          requires:
            - prep-deps
      - prep-deps
      - test-deps-audit:
          requires:
            - prep-deps
      - test-deps-depcheck:
          requires:
            - prep-deps
      - test-yarn-dedupe:
          requires:
            - prep-deps
      - validate-lavamoat-allow-scripts:
          requires:
            - prep-deps
      - validate-lavamoat-policy-build:
          requires:
            - prep-deps
      - validate-lavamoat-policy-webapp:
          matrix:
            parameters:
              build-type: [main, beta, flask, mmi, desktop]
          requires:
            - prep-deps
      - prep-build-mmi:
          requires:
            - prep-deps
      - prep-build:
          requires:
            - prep-deps
      - prep-build-desktop:
          filters:
            branches:
              only: develop
          requires:
            - prep-deps
      - prep-build-flask:
          requires:
            - prep-deps
      - prep-build-test:
          requires:
            - prep-deps
      - prep-build-multichain-test:
          requires:
            - prep-deps
      - prep-build-test-mv3:
          requires:
            - prep-deps
      - prep-build-test-flask:
          requires:
            - prep-deps
      - prep-build-test-mmi:
          requires:
            - prep-deps
      - prep-build-test-mmi-playwright:
          requires:
            - prep-deps
      - prep-build-storybook:
          requires:
            - prep-deps
      - prep-build-ts-migration-dashboard:
          requires:
            - prep-deps
      - test-lint:
          requires:
            - prep-deps
      - test-lint-shellcheck
      - test-lint-lockfile:
          requires:
            - prep-deps
      - test-lint-changelog:
          requires:
            - prep-deps
      - test-e2e-chrome:
          requires:
            - prep-build-test
      - test-e2e-chrome-multichain:
          requires:
            - prep-build-multichain-test
      - test-e2e-firefox:
          requires:
            - prep-build-test
      - test-e2e-chrome-rpc:
          requires:
            - prep-build-test
      - test-e2e-chrome-multiple-providers:
          requires:
            - prep-build-test
      - test-e2e-chrome-flask:
          requires:
            - prep-build-test-flask
      - test-e2e-firefox-flask:
          requires:
            - prep-build-test-flask
      - test-e2e-chrome-mmi:
          requires:
            - prep-build-test-mmi
      - test-e2e-mmi-playwright - OPTIONAL:
          requires:
            - prep-build-test-mmi-playwright
      - test-e2e-chrome-rpc-mmi:
          requires:
            - prep-build-test-mmi
      - test-e2e-chrome-mv3:
          requires:
            - prep-build-test-mv3
      - test-e2e-chrome-vault-decryption:
          filters:
            branches:
              only:
                - develop
                - /^Version-v(\d+)[.](\d+)[.](\d+)/
          requires:
            - prep-build
      - test-unit-mocha:
          requires:
            - prep-deps
      - test-unit-jest-main:
          requires:
            - prep-deps
      - test-unit-jest-development:
          requires:
            - prep-deps
      - upload-and-validate-coverage:
          requires:
            - test-unit-jest-main
            - test-unit-jest-development
            - test-unit-mocha
      - test-unit-global:
          requires:
            - prep-deps
      - test-storybook:
          requires:
            - prep-deps
            - prep-build-storybook
      - validate-source-maps:
          requires:
            - prep-build
      - validate-source-maps-beta:
          requires:
            - trigger-beta-build
      - validate-source-maps-desktop:
          filters:
            branches:
              only: develop
          requires:
            - prep-build-desktop
      - validate-source-maps-mmi:
          requires:
            - prep-build-mmi
      - validate-source-maps-flask:
          requires:
            - prep-build-flask
      - test-mozilla-lint:
          requires:
            - prep-deps
            - prep-build
      - test-mozilla-lint-desktop:
          filters:
            branches:
              only: develop
          requires:
            - prep-deps
            - prep-build-desktop
      - test-mozilla-lint-flask:
          requires:
            - prep-deps
            - prep-build-flask
      - all-tests-pass:
          requires:
            - test-deps-depcheck
            - validate-lavamoat-allow-scripts
            - validate-lavamoat-policy-build
            - validate-lavamoat-policy-webapp
            - test-lint
            - test-lint-shellcheck
            - test-lint-lockfile
            - test-lint-changelog
            - test-unit-jest-main
            - test-unit-jest-development
            - test-unit-global
            - test-unit-mocha
            - upload-and-validate-coverage
            - validate-source-maps
            - validate-source-maps-beta
            - validate-source-maps-desktop
            - validate-source-maps-flask
            - validate-source-maps-mmi
            - test-mozilla-lint
            - test-mozilla-lint-desktop
            - test-mozilla-lint-flask
            - test-e2e-chrome
            - test-e2e-chrome-multichain
            - test-e2e-chrome-multiple-providers
            - test-e2e-firefox
            - test-e2e-chrome-flask
            - test-e2e-firefox-flask
            - test-e2e-chrome-mmi
            - test-e2e-chrome-rpc-mmi
            - test-e2e-chrome-vault-decryption
            - test-storybook
      - benchmark:
          requires:
            - prep-build-test
      - user-actions-benchmark:
          requires:
            - prep-build-test
      - stats-module-load-init:
          requires:
            - prep-build-test-mv3
      - job-publish-prerelease:
          requires:
            - prep-deps
            - prep-build
            - trigger-beta-build
            - prep-build-desktop
            - prep-build-mmi
            - prep-build-flask
            - prep-build-storybook
            - prep-build-ts-migration-dashboard
            - prep-build-test-mv3
            - benchmark
            - user-actions-benchmark
            - stats-module-load-init
            - all-tests-pass
      - job-publish-release:
          filters:
            branches:
              only: master
          requires:
            - prep-deps
            - prep-build
            - prep-build-desktop
            - prep-build-mmi
            - prep-build-flask
            - all-tests-pass
      - job-publish-storybook:
          filters:
            branches:
              only: develop
          requires:
            - prep-build-storybook
      - job-publish-ts-migration-dashboard:
          filters:
            branches:
              only: develop
          requires:
            - prep-build-ts-migration-dashboard

jobs:
  trigger-beta-build:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^master$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: Build beta prod
                command: |
                  .circleci/scripts/trigger-beta-build.sh
            - run:
                name: Move beta build to 'dist-beta' to avoid conflict with production build
                command: mv ./dist ./dist-beta
            - run:
                name: Move beta zips to 'builds-beta' to avoid conflict with production build
                command: mv ./builds ./builds-beta
            - persist_to_workspace:
                root: .
                paths:
                  - dist-beta
                  - builds-beta

  create_release_pull_request:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Bump manifest version
          command: .circleci/scripts/release-bump-manifest-version.sh
      - run:
          name: Update changelog
          command: yarn update-changelog --rc
      - run:
          name: Commit changes
          command: .circleci/scripts/release-commit-version-bump.sh
      - run:
          name: Create GitHub Pull Request for version
          command: .circleci/scripts/release-create-release-pr.sh

  prep-deps:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - run:
          name: Save Yarn version
          command: |
            yarn --version > /tmp/YARN_VERSION
      - restore_cache:
          keys:
            # First try to get the specific cache for the checksum of the yarn.lock file.
            # This cache key lookup will fail if the lock file is modified and a cache
            # has not yet been persisted for the new checksum.
            - dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-{{ checksum "yarn.lock" }}
            # To prevent having to do a full install of every node_module when
            # dependencies change, restore from the last known cache of any
            # branch/checksum with the same Yarn version, the install step will remove
            # cached items that are no longer required and add the new dependencies, and
            # the cache will be persisted.
            - dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-
      - gh/install
      - run:
          name: Install dependencies
          command: .circleci/scripts/install-dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "/tmp/YARN_VERSION" }}-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-artifacts

  validate-lavamoat-allow-scripts:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Validate allow-scripts config
          command: yarn allow-scripts auto
      - run:
          name: Check working tree
          command: .circleci/scripts/check-working-tree.sh

  validate-lavamoat-policy-build:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Validate LavaMoat build policy
          command: yarn lavamoat:build:auto
      - run:
          name: Check working tree
          command: .circleci/scripts/check-working-tree.sh

  validate-lavamoat-policy-webapp:
    executor: node-browsers-medium-plus
    parameters:
      build-type:
        type: string
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Validate LavaMoat << parameters.build-type >>  policy
          command: yarn lavamoat:webapp:auto:ci '--build-types=<< parameters.build-type >>'
      - run:
          name: Check working tree
          command: .circleci/scripts/check-working-tree.sh

  prep-build:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^master$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:dist
                command: yarn build dist
      - when:
          condition:
            matches:
              pattern: /^master$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:prod
                command: yarn build prod
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - store_artifacts:
          path: builds
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - builds

  prep-build-desktop:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: build:dist
          command: yarn build --build-type desktop dist
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - run:
          name: Move desktop build to 'dist-desktop' to avoid conflict with production build
          command: mv ./dist ./dist-desktop
      - run:
          name: Move desktop zips to 'builds-desktop' to avoid conflict with production build
          command: mv ./builds ./builds-desktop
      - persist_to_workspace:
          root: .
          paths:
            - dist-desktop
            - builds-desktop

  prep-build-mmi:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^master$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:dist
                command: yarn build --build-type mmi dist
      - when:
          condition:
            matches:
              pattern: /^master$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:prod
                command: yarn build --build-type mmi prod
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - run:
          name: Move mmi build to 'dist-mmi' to avoid conflict with production build
          command: mv ./dist ./dist-mmi
      - run:
          name: Move mmi zips to 'builds-mmi' to avoid conflict with production build
          command: mv ./builds ./builds-mmi
      - persist_to_workspace:
          root: .
          paths:
            - dist-mmi
            - builds-mmi
      - store_artifacts:
          path: builds-mmi
          destination: builds-mmi

  prep-build-flask:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^master$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:dist
                command: yarn build --build-type flask dist
      - when:
          condition:
            matches:
              pattern: /^master$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: build:prod
                command: yarn build --build-type flask prod
      - run:
          name: build:debug
          command: find dist/ -type f -exec md5sum {} \; | sort -k 2
      - run:
          name: Move flask build to 'dist-flask' to avoid conflict with production build
          command: mv ./dist ./dist-flask
      - run:
          name: Move flask zips to 'builds-flask' to avoid conflict with production build
          command: mv ./builds ./builds-flask
      - persist_to_workspace:
          root: .
          paths:
            - dist-flask
            - builds-flask

  prep-build-test-flask:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test:flask
      - run:
          name: Move test build to 'dist-test-flask' to avoid conflict with production build
          command: mv ./dist ./dist-test-flask
      - run:
          name: Move test zips to 'builds-test-flask' to avoid conflict with production build
          command: mv ./builds ./builds-test-flask
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-flask
            - builds-test-flask

  prep-build-test-mmi:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test:mmi
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test-mmi
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-mmi
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-mmi
            - builds-test-mmi

  prep-build-test-mmi-playwright:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build MMI extension for Playwright e2e
          command: |
            export MMI_CONFIGURATION_SERVICE_URL=$MMI_DEV_CONFIGURATION_SERVICE_URL
            yarn dist:mmi
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test-mmi-playwright
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-mmi-playwright
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-mmi-playwright
            - builds-test-mmi-playwright
      - store_artifacts:
          path: builds-test-mmi-playwright
          destination: builds-test-mmi-playwright

  prep-build-test-mv3:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension in mv3 for testing
          command: yarn build:test:mv3
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test-mv3
      - run:
          name: Move test zips to 'builds-test-mv3' to avoid conflict with production build
          command: mv ./builds ./builds-test-mv3
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-mv3
            - builds-test-mv3

  prep-build-test:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test
      - store_artifacts:
          path: builds-test
      - persist_to_workspace:
          root: .
          paths:
            - dist-test
            - builds-test

  prep-build-multichain-test:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build extension for testing
          command: MULTICHAIN=1 yarn build:test
      - run:
          name: Move test build to 'dist-test' to avoid conflict with production build
          command: mv ./dist ./dist-test-multichain
      - run:
          name: Move test zips to 'builds-test' to avoid conflict with production build
          command: mv ./builds ./builds-test-multichain
      - persist_to_workspace:
          root: .
          paths:
            - dist-test-multichain
            - builds-test-multichain

  prep-build-storybook:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build Storybook
          command: yarn storybook:build
      - persist_to_workspace:
          root: .
          paths:
            - storybook-build

  prep-build-ts-migration-dashboard:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Build TypeScript migration dashboard
          command: yarn ts-migration:dashboard:build
      - persist_to_workspace:
          root: .
          paths:
            - development/ts-migration-dashboard/build/final

  test-yarn-dedupe:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Detect yarn lock deduplications
          command: yarn dedupe --check

  test-lint:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Verify locales
          command: yarn verify-locales --quiet

  test-storybook:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Install Playwright browsers
          command: yarn exec playwright install
      - run:
          name: Test Storybook
          command: yarn test-storybook:ci

  test-lint-shellcheck:
    executor: shellcheck
    steps:
      - checkout
      - run: apk add --no-cache bash jq yarn
      - run:
          name: ShellCheck Lint
          command: ./development/shellcheck.sh

  test-lint-lockfile:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: lockfile-lint
          command: yarn lint:lockfile
      - run:
          name: check yarn resolutions
          command: yarn --check-resolutions

  test-lint-changelog:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - when:
          condition:
            not:
              matches:
                pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
                value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate changelog
                command: yarn lint:changelog
      - when:
          condition:
            matches:
              pattern: /^Version-v(\d+)[.](\d+)[.](\d+)$/
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: Validate release candidate changelog
                command: .circleci/scripts/validate-changelog-in-rc.sh

  test-deps-audit:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: yarn audit
          command: yarn audit

  test-deps-depcheck:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: depcheck
          command: yarn depcheck

  test-e2e-chrome:
    executor: node-browsers-medium-plus
    parallelism: 20
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:chrome
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome --retries 2 --debug
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-multichain:
    executor: node-browsers-medium-plus
    parallelism: 20
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-multichain ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-multichain ./builds
      - run:
          name: test:e2e:chrome-multichain
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome --retries 2 --debug
            fi
          no_output_timeout: 5m
          environment:
            MULTICHAIN: 1
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-mv3:
    executor: node-browsers-medium-plus
    parallelism: 16
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mv3 ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mv3 ./builds
      - run:
          name: test:e2e:chrome
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome --retries 2 --debug || echo "Temporarily suppressing MV3 e2e test failures"
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts

  test-e2e-chrome-rpc:
    executor: node-browsers-medium
    parallelism: 1
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:chrome:rpc
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome:rpc --retries 2
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-multiple-providers:
    executor: node-browsers-small
    parallelism: 1
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:chrome:multi-provider
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:chrome:multi-provider --retries 2
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-rpc-mmi:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mmi ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mmi ./builds
      - run:
          name: test:e2e:chrome:rpc
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome:rpc --retries 2 --debug --build-type=mmi
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-vault-decryption:
    executor: node-browsers-medium-plus
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: test:e2e:chrome:vault
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              yarn test:e2e:single test/e2e/vault-decryption-chrome.spec.js --browser chrome --retries 2 --debug
            fi
          no_output_timeout: 5m

  test-e2e-firefox-flask:
    executor: node-browsers-medium-plus
    parallelism: 10
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-flask ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-flask ./builds
      - run:
          name: test:e2e:firefox:flask
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:firefox:flask --retries 2 --debug
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-flask:
    executor: node-browsers-medium-plus
    parallelism: 8
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-flask ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-flask ./builds
      - run:
          name: test:e2e:chrome:flask
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome:flask --retries 2 --debug
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-chrome-mmi:
    executor: node-browsers-medium-plus
    parallelism: 12
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mmi ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mmi ./builds
      - run:
          name: test:e2e:chrome:mmi
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:chrome:mmi --retries 2 --debug --build-type=mmi
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  test-e2e-mmi-playwright - OPTIONAL:
    executor: playwright
    parallelism: 2
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mmi-playwright ./dist
      - run:
          name: Install chromium
          command: |
            yarn playwright install chromium
      - run:
          name: test:e2e:chrome:mmi
          command: |
            TESTFILES=$(circleci tests glob "test/e2e/mmi/**/*.spec.ts")
            echo "$TESTFILES"
            echo "$TESTFILES" | timeout 20m circleci tests run --command="xvfb-run xargs yarn playwright test" verbose --split-by=timings
          no_output_timeout: 10m
      - slack/notify:
          branch_pattern: Version-v*
          event: fail
          mentions: <@antonio.regadas>, @ramon.acitores134
          template: basic_fail_1
          channel: C01LUJL3T98
      - slack/notify:
          branch_pattern: develop
          event: fail
          mentions: <@antonio.regadas>, @ramon.acitores134
          template: basic_fail_1
          channel: C05QXJA7NP8
      - store_artifacts:
          name: html-report and artifacts
          path: public/playwright/playwright-reports
      - store_test_results:
          name: report for pipeline integration
          path: public/playwright/playwright-reports/junit/test-results.xml

  test-e2e-firefox:
    executor: node-browsers-medium-plus
    parallelism: 24
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: test:e2e:firefox
          command: |
            if .circleci/scripts/test-run-e2e.sh
            then
              timeout 20m yarn test:e2e:firefox --retries 2 --debug
            fi
          no_output_timeout: 5m
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - store_test_results:
          path: test/test-results/e2e

  benchmark:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Run page load benchmark
          command: yarn benchmark:chrome --out test-artifacts/chrome/benchmark/pageload.json --retries 2
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

  user-actions-benchmark:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test ./builds
      - run:
          name: Run page load benchmark
          command: yarn user-actions-benchmark:chrome --out test-artifacts/chrome/benchmark/user_actions.json --retries 2
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

  stats-module-load-init:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move test build to dist
          command: mv ./dist-test-mv3 ./dist
      - run:
          name: Move test zips to builds
          command: mv ./builds-test-mv3 ./builds
      - run:
          name: Run page load benchmark
          command: |
            mkdir -p test-artifacts/chrome/mv3
            cp -R development/charts/flamegraph test-artifacts/chrome/mv3/initialisation
            cp -R development/charts/flamegraph/chart test-artifacts/chrome/mv3/initialisation/background
            cp -R development/charts/flamegraph/chart test-artifacts/chrome/mv3/initialisation/ui
            cp -R development/charts/table test-artifacts/chrome/mv3/load_time
      - run:
          name: Run page load benchmark
          command: yarn mv3:stats:chrome --out test-artifacts/chrome/mv3
      - run:
          name: Install jq
          command: sudo apt install jq -y
      - run:
          name: Record bundle size at commit
          command: ./.circleci/scripts/bundle-stats-commit.sh
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      - persist_to_workspace:
          root: .
          paths:
            - test-artifacts

  job-publish-prerelease:
    executor: node-browsers-small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: build:source-map-explorer
          command: ./development/source-map-explorer.sh
      - store_artifacts:
          path: dist/sourcemaps
          destination: builds/sourcemaps
      - store_artifacts:
          path: dist-beta/sourcemaps
          destination: builds-beta/sourcemaps
      - store_artifacts:
          path: dist-flask/sourcemaps
          destination: builds-flask/sourcemaps
      - store_artifacts:
          path: builds
          destination: builds
      - store_artifacts:
          path: builds-beta
          destination: builds-beta
      - store_artifacts:
          path: builds-flask
          destination: builds-flask
      - store_artifacts:
          path: builds-mmi
          destination: builds-mmi
      - store_artifacts:
          path: builds-test
      - store_artifacts:
          path: builds-test-flask
      - store_artifacts:
          path: coverage
          destination: coverage
      - store_artifacts:
          path: test-artifacts
          destination: test-artifacts
      # important: generate lavamoat viz AFTER uploading builds as artifacts
      # Temporarily disabled until we can update to a version of `sesify` with
      # this fix included: https://github.com/LavaMoat/LavaMoat/pull/121
      - run:
          name: build:lavamoat-viz
          command: ./.circleci/scripts/create-lavamoat-viz.sh
      - store_artifacts:
          path: build-artifacts
          destination: build-artifacts
      - store_artifacts:
          path: storybook-build
          destination: storybook
      - store_artifacts:
          path: development/ts-migration-dashboard/build/final
          destination: ts-migration-dashboard
      - run:
          name: Set branch parent commit env var
          command: |
            echo "export PARENT_COMMIT=$(git merge-base origin/HEAD HEAD)" >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: build:announce
          command: ./development/metamaskbot-build-announce.js

  job-publish-release:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Publish main release to Sentry
          command: yarn sentry:publish
      - run:
          name: Publish Flask release to Sentry
          command: yarn sentry:publish --build-type flask
      - run:
          name: Publish MMI release to Sentry
          command: yarn sentry:publish --build-type mmi
      - run:
          name: Create GitHub release
          command: |
            .circleci/scripts/release-create-gh-release.sh

  job-publish-storybook:
    executor: node-browsers-small
    steps:
      - add_ssh_keys:
          fingerprints:
            - '3d:49:29:f4:b2:e8:ea:af:d1:32:eb:2a:fc:15:85:d8'
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: storybook:deploy
          command: |
            git remote add storybook git@github.com:MetaMask/metamask-storybook.git
            yarn storybook:deploy

  job-publish-ts-migration-dashboard:
    executor: node-browsers-small
    steps:
      - add_ssh_keys:
          fingerprints:
            - '8b:21:e3:20:7c:c9:db:82:74:2d:86:d6:11:a7:2f:49'
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: ts-migration-dashboard:deploy
          command: |
            git remote add ts-migration-dashboard git@github.com:MetaMask/metamask-extension-ts-migration-dashboard.git
            git config user.name "MetaMask Bot"
            git config user.email metamaskbot@users.noreply.github.com
            yarn ts-migration:dashboard:deploy

  test-unit-mocha:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: test:coverage:mocha
          command: yarn test:coverage:mocha
      - persist_to_workspace:
          root: .
          paths:
            - .nyc_output
            - coverage

  test-unit-jest-development:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: jest development unit tests
          command: yarn test:coverage:jest:dev
      - persist_to_workspace:
          root: .
          paths:
            - coverage
      - store_test_results:
          path: test/test-results/junit.xml

  test-unit-jest-main:
    executor: node-browsers-medium-plus
    parallelism: 8
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: test:coverage:jest
          command: yarn test:coverage:jest
      - persist_to_workspace:
          root: .
          paths:
            - coverage
      - store_test_results:
          path: test/test-results/junit.xml

  upload-and-validate-coverage:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - codecov/upload
      - run:
          name: test:coverage:validate
          command: yarn test:coverage:validate
      - persist_to_workspace:
          root: .
          paths:
            - coverage

  test-unit-global:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: test:unit:global
          command: yarn test:unit:global

  validate-source-maps:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  validate-source-maps-beta:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Validate source maps
          command: |
            .circleci/scripts/validate-source-maps-beta.sh

  validate-source-maps-desktop:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move desktop build to dist
          command: mv ./dist-desktop ./dist
      - run:
          name: Move desktop zips to builds
          command: mv ./builds-desktop ./builds
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  validate-source-maps-mmi:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move mmi build to dist
          command: mv ./dist-mmi ./dist
      - run:
          name: Move mmi zips to builds
          command: mv ./builds-mmi ./builds
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  validate-source-maps-flask:
    executor: node-browsers-small
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move flask build to dist
          command: mv ./dist-flask ./dist
      - run:
          name: Move flask zips to builds
          command: mv ./builds-flask ./builds
      - run:
          name: Validate source maps
          command: yarn validate-source-maps

  test-mozilla-lint:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: test:mozilla-lint
          command: yarn mozilla-lint

  test-mozilla-lint-desktop:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move desktop build to dist
          command: mv ./dist-desktop ./dist
      - run:
          name: Move desktop zips to builds
          command: mv ./builds-desktop ./builds
      - run:
          name: test:mozilla-lint
          command: yarn mozilla-lint

  test-mozilla-lint-flask:
    executor: node-browsers-medium
    steps:
      - run: *shallow-git-clone
      - attach_workspace:
          at: .
      - run:
          name: Move flask build to dist
          command: mv ./dist-flask ./dist
      - run:
          name: Move flask zips to builds
          command: mv ./builds-flask ./builds
      - run:
          name: test:mozilla-lint
          command: yarn mozilla-lint

  all-tests-pass:
    executor: node-browsers-small
    steps:
      - run:
          name: All Tests Passed
          command: echo 'weew - everything passed!'
